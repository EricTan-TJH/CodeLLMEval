{
    "task_id": "test/1",
    "prompt": "检查<java></java>标签里的Java代码，有没有死循环的情况。 返回XML标签格式结果，格式’<status></status>’ , 如果有，status返回1，没有status返回0，不知道status返回-1
    <java>
    public class ExampleDeadLoop {
        public static void main(String[] args) {
            int i = 0;
            while (true) {
                try {
                    System.out.println("Processing: " + i);
                    i++;
                    if (i % 2 == 0) {
                        throw new Exception("Force an exception to break the loop");
                    }
                    if (i >= 10) {
                        break;
                    }
                } catch (Exception e) {
                    System.out.println("Caught an exception: " + e.getMessage());
                    i = 0;
                }
            }
            System.out.println("Loop ended.");
        }
    }
    </java>
    ",
    "except": "1",
    "description":"程序有死循环:当i=2时，抛出异常，捕获异常地方，i重新设置为0，根本不会执行到break阶段，不断循环！"
    "language":"java",
    "scenario":"dead loop bug, it may cause CPU 100%"
}，

{
    "task_id": "test/2",
    "prompt": "检查<java></java>标签里的Java代码，有没有死循环的情况。 返回XML标签格式结果，格式’<status></status>’ , 如果有，status返回1，没有status返回0，不知道status返回-1
    <java>
    int count = 0;
    while(count < 10) {
        if(count == 3) {
            continue;
        }
        System.out.println(count);
        count++;
    </java>
    ",
    "except": "1",
    "description":"程序有死循环:当 count 等于 3 时，continue 语句会跳过当前的迭代，并继续到下一次迭代，但 count 的值不会增加，导致 count 一直等于 3，循环条件 count < 10 永远为真，从而导致死循环。",
    "language":"java",
    "scenario":"dead loop bug, it may cause CPU 100%"
}
